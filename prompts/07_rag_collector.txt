请基于docs/12_rag_ai_training.md实现RAG数据采集系统:

1. **src/poe2build/rag/data_collector.py**:
   - 实现docs中的PoE2NinjaRAGCollector类
   - collect_comprehensive_build_data()：采集全面构筑数据
   - _fetch_popular_builds()：获取热门构筑
   - _fetch_class_distribution()：职业分布数据
   - _fetch_skill_meta()：技能流行度数据
   - _build_comprehensive_dataset()：构建综合数据集
   
2. **数据结构** (基于docs中的PoE2BuildData):
   - character_name, character_class, ascendancy, level
   - main_skill, support_gems, weapon_type, key_items
   - dps, life, energy_shield, total_cost
   - popularity_rank, success_metrics, timestamp
   
3. **异步采集机制**:
   - 使用aiohttp进行异步HTTP请求
   - 从 https://poe.ninja/poe2/builds 采集数据
   - API端点: builds, characters, items
   - 实现采集频率控制和错误重试

4. **数据处理**:
   - _extract_main_skill()：提取主要技能
   - _extract_support_gems()：提取辅助宝石
   - _calculate_success_metrics()：计算成功指标
   - 数据清洗和标准化

实现要求:
- 完全基于docs/12_rag_ai_training.md的设计
- 实现"生态公民"的API使用方式
- 支持增量和全量更新模式
- 包含完整的错误处理和日志记录